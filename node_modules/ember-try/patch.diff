diff --git a/test/helpers/write-json-file.js b/test/helpers/write-json-file.js
index a814693..856cc12 100644
--- a/test/helpers/write-json-file.js
+++ b/test/helpers/write-json-file.js
@@ -1,5 +1,7 @@
-var fs = require('fs-extra');
+var fs = require('fs');
+var RSVP = require('rsvp');
+var writeFile = RSVP.denodeify(fs.writeFile);
 
 module.exports = function writeJSONFile(filename, contents) {
-  fs.writeFileSync(filename, JSON.stringify(contents, null, 2));
+  return writeFile(filename, JSON.stringify(contents, null, 2));
 };
diff --git a/test/tasks/try-each-test.js b/test/tasks/try-each-test.js
index 5d0d339..909e3cb 100644
--- a/test/tasks/try-each-test.js
+++ b/test/tasks/try-each-test.js
@@ -111,12 +111,13 @@ describe('tryEach', function() {
         _exit: mockedExit
       });
 
-      writeJSONFile('bower.json', fixtureBower);
-      return tryEachTask.run(legacyConfig.scenarios, {}).then(function() {
-        output.should.containEql('Scenario default: SUCCESS');
-        output.should.containEql('Scenario first: SUCCESS');
-        output.should.containEql('Scenario second: SUCCESS');
-        output.should.containEql('All 3 scenarios succeeded');
+      return writeJSONFile('bower.json', fixtureBower).then(function() {
+        return tryEachTask.run(legacyConfig.scenarios, {}).then(function() {
+          output.should.containEql('Scenario default: SUCCESS');
+          output.should.containEql('Scenario first: SUCCESS');
+          output.should.containEql('Scenario second: SUCCESS');
+          output.should.containEql('All 3 scenarios succeeded');
+        });
       }).catch(function(err) {
         console.log(err);
         true.should.equal(false, 'Assertions should run');
@@ -161,14 +162,15 @@ describe('tryEach', function() {
         _exit: mockedExit
       });
 
-      writeJSONFile('bower.json', fixtureBower);
-      return tryEachTask.run(legacyConfig.scenarios, {}).then(function() {
-        output.should.containEql('Scenario default: FAIL');
-        output.should.containEql('Scenario first: SUCCESS');
-        output.should.containEql('Scenario second: SUCCESS');
-        output.should.containEql('1 scenarios failed');
-        output.should.containEql('2 scenarios succeeded');
-        output.should.containEql('3 scenarios run');
+      return writeJSONFile('bower.json', fixtureBower).then(function() {
+        return tryEachTask.run(legacyConfig.scenarios, {}).then(function() {
+          output.should.containEql('Scenario default: FAIL');
+          output.should.containEql('Scenario first: SUCCESS');
+          output.should.containEql('Scenario second: SUCCESS');
+          output.should.containEql('1 scenarios failed');
+          output.should.containEql('2 scenarios succeeded');
+          output.should.containEql('3 scenarios run');
+        });
       }).catch(function(err) {
         console.log(err);
         true.should.equal(false, 'Assertions should run');
@@ -208,13 +210,16 @@ describe('tryEach', function() {
         _exit: mockedExit
       });
 
-      writeJSONFile('package.json', fixturePackage);
-      fs.mkdirSync('node_modules');
-      writeJSONFile('bower.json', fixtureBower);
-      return tryEachTask.run(config.scenarios, {}).then(function() {
-        output.should.containEql('Scenario first: SUCCESS');
-        output.should.containEql('Scenario second: SUCCESS');
-        output.should.containEql('All 2 scenarios succeeded');
+      return RSVP.all([
+        writeJSONFile('package.json', fixturePackage),
+        fs.mkdir('node_modules'),
+        writeJSONFile('bower.json', fixtureBower)
+      ]).then(function(){
+        return tryEachTask.run(config.scenarios, {}).then(function() {
+          output.should.containEql('Scenario first: SUCCESS');
+          output.should.containEql('Scenario second: SUCCESS');
+          output.should.containEql('All 2 scenarios succeeded');
+        });
       }).catch(function(err) {
         console.log(err);
         true.should.equal(false, 'Assertions should run');
@@ -259,15 +264,18 @@ describe('tryEach', function() {
         _exit: mockedExit
       });
 
-      writeJSONFile('package.json', fixturePackage);
-      fs.mkdirSync('node_modules');
-      writeJSONFile('bower.json', fixtureBower);
-      return tryEachTask.run(config.scenarios, {}).then(function() {
-        output.should.containEql('Scenario first: FAIL');
-        output.should.containEql('Scenario second: SUCCESS');
-        output.should.containEql('1 scenarios failed');
-        output.should.containEql('1 scenarios succeeded');
-        output.should.containEql('2 scenarios run');
+      return RSVP.all([
+        writeJSONFile('package.json', fixturePackage),
+        fs.mkdir('node_modules'),
+        writeJSONFile('bower.json', fixtureBower)
+      ]).then(function() {
+        return tryEachTask.run(config.scenarios, {}).then(function() {
+          output.should.containEql('Scenario first: FAIL');
+          output.should.containEql('Scenario second: SUCCESS');
+          output.should.containEql('1 scenarios failed');
+          output.should.containEql('1 scenarios succeeded');
+          output.should.containEql('2 scenarios run');
+        });
       }).catch(function(err) {
         console.log(err);
         true.should.equal(false, 'Assertions should run');
@@ -321,10 +329,11 @@ describe('tryEach', function() {
         _exit: mockedExit
       });
 
-      writeJSONFile('bower.json', fixtureBower);
-      return tryEachTask.run(config.scenarios, {}).then(function() {
-        output.should.containEql('Scenario first: SUCCESS');
-        ranPassedInCommand.should.equal(true, 'Should run the passed in command');
+      return writeJSONFile('bower.json', fixtureBower).then(function() {
+        return tryEachTask.run(config.scenarios, {}).then(function() {
+          output.should.containEql('Scenario first: SUCCESS');
+          ranPassedInCommand.should.equal(true, 'Should run the passed in command');
+        });
       }).catch(function(err) {
         console.log(err);
         true.should.equal(false, 'Assertions should run');
