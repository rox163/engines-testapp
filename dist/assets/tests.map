{"version":3,"sources":["engines-testapp/tests/app.jshint.js","engines-testapp/tests/helpers/destroy-app.js","engines-testapp/tests/helpers/destroy-app.jshint.js","engines-testapp/tests/helpers/module-for-acceptance.js","engines-testapp/tests/helpers/module-for-acceptance.jshint.js","engines-testapp/tests/helpers/resolver.js","engines-testapp/tests/helpers/resolver.jshint.js","engines-testapp/tests/helpers/start-app.js","engines-testapp/tests/helpers/start-app.jshint.js","engines-testapp/tests/mirage/config.jshint.js","engines-testapp/tests/mirage/scenarios/default.jshint.js","engines-testapp/tests/router.jshint.js","engines-testapp/tests/services/active-session.jshint.js","engines-testapp/tests/services/blog-data.jshint.js","engines-testapp/tests/test-helper.js","engines-testapp/tests/test-helper.jshint.js","vendor/ember-cli/tests-suffix.js"],"sourcesContent":["define('engines-testapp/tests/app.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  describe('JSHint - app.js', function () {\n    it('should pass jshint', function () {\n      expect(false, 'app.js should pass jshint.\\napp.js: line 1, col 1, \\'import\\' is only available in ES6 (use \\'esversion: 6\\').\\napp.js: line 2, col 1, \\'import\\' is only available in ES6 (use \\'esversion: 6\\').\\napp.js: line 3, col 1, \\'import\\' is only available in ES6 (use \\'esversion: 6\\').\\napp.js: line 4, col 1, \\'import\\' is only available in ES6 (use \\'esversion: 6\\').\\napp.js: line 6, col 1, \\'let\\' is available in ES6 (use \\'esversion: 6\\') or Mozilla JS extensions (use moz).\\napp.js: line 13, col 3, \\'object short notation\\' is available in ES6 (use \\'esversion: 6\\') or Mozilla JS extensions (use moz).\\napp.js: line 29, col 1, \\'export\\' is only available in ES6 (use \\'esversion: 6\\').\\n\\n7 errors').to.be.ok;\n    });\n  });\n});","define('engines-testapp/tests/helpers/destroy-app', ['exports', 'ember'], function (exports, _ember) {\n  exports['default'] = destroyApp;\n\n  function destroyApp(application) {\n    _ember['default'].run(application, 'destroy');\n  }\n});","define('engines-testapp/tests/helpers/destroy-app.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  describe('JSHint - helpers/destroy-app.js', function () {\n    it('should pass jshint', function () {\n      expect(false, 'helpers/destroy-app.js should pass jshint.\\nhelpers/destroy-app.js: line 1, col 1, \\'import\\' is only available in ES6 (use \\'esversion: 6\\').\\nhelpers/destroy-app.js: line 3, col 1, \\'export\\' is only available in ES6 (use \\'esversion: 6\\').\\n\\n2 errors').to.be.ok;\n    });\n  });\n});","define('engines-testapp/tests/helpers/module-for-acceptance', ['exports', 'qunit', 'engines-testapp/tests/helpers/start-app', 'engines-testapp/tests/helpers/destroy-app'], function (exports, _qunit, _enginesTestappTestsHelpersStartApp, _enginesTestappTestsHelpersDestroyApp) {\n  exports['default'] = function (name) {\n    var options = arguments.length <= 1 || arguments[1] === undefined ? {} : arguments[1];\n\n    (0, _qunit.module)(name, {\n      beforeEach: function beforeEach() {\n        this.application = (0, _enginesTestappTestsHelpersStartApp['default'])();\n\n        if (options.beforeEach) {\n          options.beforeEach.apply(this, arguments);\n        }\n      },\n\n      afterEach: function afterEach() {\n        (0, _enginesTestappTestsHelpersDestroyApp['default'])(this.application);\n\n        if (options.afterEach) {\n          options.afterEach.apply(this, arguments);\n        }\n      }\n    });\n  };\n});","define('engines-testapp/tests/helpers/module-for-acceptance.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  describe('JSHint - helpers/module-for-acceptance.js', function () {\n    it('should pass jshint', function () {\n      expect(false, 'helpers/module-for-acceptance.js should pass jshint.\\nhelpers/module-for-acceptance.js: line 1, col 1, \\'import\\' is only available in ES6 (use \\'esversion: 6\\').\\nhelpers/module-for-acceptance.js: line 2, col 1, \\'import\\' is only available in ES6 (use \\'esversion: 6\\').\\nhelpers/module-for-acceptance.js: line 3, col 1, \\'import\\' is only available in ES6 (use \\'esversion: 6\\').\\nhelpers/module-for-acceptance.js: line 5, col 1, \\'export\\' is only available in ES6 (use \\'esversion: 6\\').\\nhelpers/module-for-acceptance.js: line 5, col 39, \\'default parameters\\' is only available in ES6 (use \\'esversion: 6\\').\\nhelpers/module-for-acceptance.js: line 7, col 5, \\'concise methods\\' is available in ES6 (use \\'esversion: 6\\') or Mozilla JS extensions (use moz).\\nhelpers/module-for-acceptance.js: line 15, col 5, \\'concise methods\\' is available in ES6 (use \\'esversion: 6\\') or Mozilla JS extensions (use moz).\\n\\n7 errors').to.be.ok;\n    });\n  });\n});","define('engines-testapp/tests/helpers/resolver', ['exports', 'ember/resolver', 'engines-testapp/config/environment'], function (exports, _emberResolver, _enginesTestappConfigEnvironment) {\n\n  var resolver = _emberResolver['default'].create();\n\n  resolver.namespace = {\n    modulePrefix: _enginesTestappConfigEnvironment['default'].modulePrefix,\n    podModulePrefix: _enginesTestappConfigEnvironment['default'].podModulePrefix\n  };\n\n  exports['default'] = resolver;\n});","define('engines-testapp/tests/helpers/resolver.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  describe('JSHint - helpers/resolver.js', function () {\n    it('should pass jshint', function () {\n      expect(false, 'helpers/resolver.js should pass jshint.\\nhelpers/resolver.js: line 1, col 1, \\'import\\' is only available in ES6 (use \\'esversion: 6\\').\\nhelpers/resolver.js: line 2, col 1, \\'import\\' is only available in ES6 (use \\'esversion: 6\\').\\nhelpers/resolver.js: line 4, col 1, \\'const\\' is available in ES6 (use \\'esversion: 6\\') or Mozilla JS extensions (use moz).\\nhelpers/resolver.js: line 11, col 1, \\'export\\' is only available in ES6 (use \\'esversion: 6\\').\\n\\n4 errors').to.be.ok;\n    });\n  });\n});","define('engines-testapp/tests/helpers/start-app', ['exports', 'ember', 'engines-testapp/app', 'engines-testapp/config/environment'], function (exports, _ember, _enginesTestappApp, _enginesTestappConfigEnvironment) {\n  exports['default'] = startApp;\n\n  function startApp(attrs) {\n    var application = undefined;\n\n    var attributes = _ember['default'].merge({}, _enginesTestappConfigEnvironment['default'].APP);\n    attributes = _ember['default'].merge(attributes, attrs); // use defaults, but you can override;\n\n    _ember['default'].run(function () {\n      application = _enginesTestappApp['default'].create(attributes);\n      application.setupForTesting();\n      application.injectTestHelpers();\n    });\n\n    return application;\n  }\n});","define('engines-testapp/tests/helpers/start-app.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  describe('JSHint - helpers/start-app.js', function () {\n    it('should pass jshint', function () {\n      expect(false, 'helpers/start-app.js should pass jshint.\\nhelpers/start-app.js: line 1, col 1, \\'import\\' is only available in ES6 (use \\'esversion: 6\\').\\nhelpers/start-app.js: line 2, col 1, \\'import\\' is only available in ES6 (use \\'esversion: 6\\').\\nhelpers/start-app.js: line 3, col 1, \\'import\\' is only available in ES6 (use \\'esversion: 6\\').\\nhelpers/start-app.js: line 5, col 1, \\'export\\' is only available in ES6 (use \\'esversion: 6\\').\\nhelpers/start-app.js: line 6, col 3, \\'let\\' is available in ES6 (use \\'esversion: 6\\') or Mozilla JS extensions (use moz).\\nhelpers/start-app.js: line 8, col 3, \\'let\\' is available in ES6 (use \\'esversion: 6\\') or Mozilla JS extensions (use moz).\\nhelpers/start-app.js: line 11, col 14, \\'arrow function syntax (=>)\\' is only available in ES6 (use \\'esversion: 6\\').\\n\\n7 errors').to.be.ok;\n    });\n  });\n});","define('engines-testapp/tests/mirage/config.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  describe('JSHint - mirage/config.js', function () {\n    it('should pass jshint', function () {\n      expect(false, 'mirage/config.js should pass jshint.\\nmirage/config.js: line 4, col 1, \\'export\\' is only available in ES6 (use \\'esversion: 6\\').\\n\\n1 error').to.be.ok;\n    });\n  });\n});","define('engines-testapp/tests/mirage/scenarios/default.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  describe('JSHint - mirage/scenarios/default.js', function () {\n    it('should pass jshint', function () {\n      expect(false, 'mirage/scenarios/default.js should pass jshint.\\nmirage/scenarios/default.js: line 2, col 1, \\'export\\' is only available in ES6 (use \\'esversion: 6\\').\\n\\n1 error').to.be.ok;\n    });\n  });\n});","define('engines-testapp/tests/router.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  describe('JSHint - router.js', function () {\n    it('should pass jshint', function () {\n      expect(false, 'router.js should pass jshint.\\nrouter.js: line 1, col 1, \\'import\\' is only available in ES6 (use \\'esversion: 6\\').\\nrouter.js: line 2, col 1, \\'import\\' is only available in ES6 (use \\'esversion: 6\\').\\nrouter.js: line 4, col 1, \\'const\\' is available in ES6 (use \\'esversion: 6\\') or Mozilla JS extensions (use moz).\\nrouter.js: line 12, col 1, \\'export\\' is only available in ES6 (use \\'esversion: 6\\').\\n\\n4 errors').to.be.ok;\n    });\n  });\n});","define('engines-testapp/tests/services/active-session.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  describe('JSHint - services/active-session.js', function () {\n    it('should pass jshint', function () {\n      expect(false, 'services/active-session.js should pass jshint.\\nservices/active-session.js: line 1, col 1, \\'import\\' is only available in ES6 (use \\'esversion: 6\\').\\nservices/active-session.js: line 3, col 1, \\'export\\' is only available in ES6 (use \\'esversion: 6\\').\\nservices/active-session.js: line 6, col 3, \\'concise methods\\' is available in ES6 (use \\'esversion: 6\\') or Mozilla JS extensions (use moz).\\n\\n3 errors').to.be.ok;\n    });\n  });\n});","define('engines-testapp/tests/services/blog-data.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  describe('JSHint - services/blog-data.js', function () {\n    it('should pass jshint', function () {\n      expect(false, 'services/blog-data.js should pass jshint.\\nservices/blog-data.js: line 1, col 1, \\'import\\' is only available in ES6 (use \\'esversion: 6\\').\\nservices/blog-data.js: line 3, col 1, \\'export\\' is only available in ES6 (use \\'esversion: 6\\').\\nservices/blog-data.js: line 14, col 15, \\'template literal syntax\\' is only available in ES6 (use \\'esversion: 6\\').\\nservices/blog-data.js: line 22, col 22, \\'template literal syntax\\' is only available in ES6 (use \\'esversion: 6\\').\\nservices/blog-data.js: line 30, col 15, \\'template literal syntax\\' is only available in ES6 (use \\'esversion: 6\\').\\nservices/blog-data.js: line 38, col 22, \\'template literal syntax\\' is only available in ES6 (use \\'esversion: 6\\').\\nservices/blog-data.js: line 6, col 3, \\'concise methods\\' is available in ES6 (use \\'esversion: 6\\') or Mozilla JS extensions (use moz).\\n\\n7 errors').to.be.ok;\n    });\n  });\n});","define('engines-testapp/tests/test-helper', ['exports', 'engines-testapp/tests/helpers/resolver', 'ember-mocha'], function (exports, _enginesTestappTestsHelpersResolver, _emberMocha) {\n\n  (0, _emberMocha.setResolver)(_enginesTestappTestsHelpersResolver['default']);\n});","define('engines-testapp/tests/test-helper.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  describe('JSHint - test-helper.js', function () {\n    it('should pass jshint', function () {\n      expect(false, 'test-helper.js should pass jshint.\\ntest-helper.js: line 1, col 1, \\'import\\' is only available in ES6 (use \\'esversion: 6\\').\\ntest-helper.js: line 2, col 1, \\'import\\' is only available in ES6 (use \\'esversion: 6\\').\\n\\n2 errors').to.be.ok;\n    });\n  });\n});","/* jshint ignore:start */\n\nrequire('engines-testapp/tests/test-helper');\nEmberENV.TESTS_FILE_LOADED = true;\n\n/* jshint ignore:end */\n"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;;ACLA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACrBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACTA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AChBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;;ACFA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;","file":"tests.js"}